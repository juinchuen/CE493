
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34+27 (git sha1 7d30f716e, clang 10.0.0-4ubuntu1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
Reading SCL library '/home/jco1147/393_folder/CE493/openlane/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib' as a blackboxâ¦

1. Executing Liberty frontend: /home/jco1147/393_folder/CE493/openlane/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: ../../cordic/gamma.sv
Parsing SystemVerilog input from `../../cordic/gamma.sv' to AST representation.
Generating RTLIL representation for module `\gamma_mem'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../cordic/cordic.sv
Parsing SystemVerilog input from `../../cordic/cordic.sv' to AST representation.
Generating RTLIL representation for module `\signed_lte'.
Generating RTLIL representation for module `\cordic'.
Warning: Replacing memory \vec with list of registers. See ../../cordic/cordic.sv:53
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../matmul/matmul.sv
Parsing SystemVerilog input from `../../matmul/matmul.sv' to AST representation.
Generating RTLIL representation for module `\mul'.
Generating RTLIL representation for module `\matmul_stage'.
Generating RTLIL representation for module `\matmul'.
../../matmul/matmul.sv:177: Warning: converting real value 1.891861e+04 to binary 19'0000100100111100111.
../../matmul/matmul.sv:178: Warning: converting real value 3.783723e+04 to binary 19'0001001001111001101.
../../matmul/matmul.sv:179: Warning: converting real value -1.638400e+04 to binary 19'1111100000000000000.
../../matmul/matmul.sv:180: Warning: converting real value 2.837792e+04 to binary 19'0000110111011011010.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../pid/pid_v2/pid.sv
Parsing SystemVerilog input from `../../pid/pid_v2/pid.sv' to AST representation.
Generating RTLIL representation for module `\mult'.
Generating RTLIL representation for module `\pid'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../svm/svm_v2/svm.sv
Parsing SystemVerilog input from `../../svm/svm_v2/svm.sv' to AST representation.
Generating RTLIL representation for module `\v_to_t'.
Generating RTLIL representation for module `\svm'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

8. Executing HIERARCHY pass (managing design hierarchy).

8.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \pid
Used module:         \mult
Used module:     \cordic
Used module:         \signed_lte
Used module:         \gamma_mem
Used module:     \svm
Used module:         \v_to_t
Used module:     \matmul
Used module:         \matmul_stage
Used module:             \mul
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Parameter \LIM_MAX = 4096
Parameter \LIM_MIN = 32'11111111111111111111000000000000

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\pid'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Parameter \LIM_MAX = 4096
Parameter \LIM_MIN = 32'11111111111111111111000000000000
Generating RTLIL representation for module `$paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Parameter \LIM_MAX = 4096
Parameter \LIM_MIN = 32'11111111111111111111000000000000
Found cached RTLIL representation for module `$paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\cordic'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic'.
Warning: Replacing memory \vec with list of registers. See ../../cordic/cordic.sv:53
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.4. Executing AST frontend in derive mode using pre-parsed AST for module `\svm'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.5. Executing AST frontend in derive mode using pre-parsed AST for module `\matmul'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul'.
../../matmul/matmul.sv:177: Warning: converting real value 4.729653e+03 to binary 16'0001001001111010.
../../matmul/matmul.sv:178: Warning: converting real value 9.459307e+03 to binary 16'0010010011110011.
../../matmul/matmul.sv:179: Warning: converting real value -4.096000e+03 to binary 16'1111000000000000.
../../matmul/matmul.sv:180: Warning: converting real value 7.094480e+03 to binary 16'0001101110110110.
Parameter \D_WIDTH = 19
Parameter \Q_BITS = 15

8.6. Executing AST frontend in derive mode using pre-parsed AST for module `\mul'.
Parameter \D_WIDTH = 19
Parameter \Q_BITS = 15
Generating RTLIL representation for module `$paramod$8f1c013275f14e385467dfcff6b49aec50919e18\mul'.
Parameter \D_WIDTH = 19
Parameter \Q_BITS = 15

8.7. Executing AST frontend in derive mode using pre-parsed AST for module `\matmul_stage'.
Parameter \D_WIDTH = 19
Parameter \Q_BITS = 15
Generating RTLIL representation for module `$paramod$8f1c013275f14e385467dfcff6b49aec50919e18\matmul_stage'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.8. Executing AST frontend in derive mode using pre-parsed AST for module `\mult'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mult'.
Parameter \D_WIDTH = 16

8.9. Executing AST frontend in derive mode using pre-parsed AST for module `\v_to_t'.
Parameter \D_WIDTH = 16
Generating RTLIL representation for module `$paramod\v_to_t\D_WIDTH=s32'00000000000000000000000000010000'.

8.10. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid
Used module:         \mult
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic
Used module:         \signed_lte
Used module:         \gamma_mem
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm
Used module:         \v_to_t
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul
Used module:         \matmul_stage
Used module:             $paramod$8f1c013275f14e385467dfcff6b49aec50919e18\mul
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Found cached RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mult'.
Parameter \D_WIDTH = 16
Found cached RTLIL representation for module `$paramod\v_to_t\D_WIDTH=s32'00000000000000000000000000010000'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.11. Executing AST frontend in derive mode using pre-parsed AST for module `\matmul_stage'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage'.

8.12. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mult
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic
Used module:         \signed_lte
Used module:         \gamma_mem
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm
Used module:         $paramod\v_to_t\D_WIDTH=s32'00000000000000000000000000010000
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage
Used module:             \mul
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13

8.13. Executing AST frontend in derive mode using pre-parsed AST for module `\mul'.
Parameter \D_WIDTH = 16
Parameter \Q_BITS = 13
Generating RTLIL representation for module `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mul'.

8.14. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mult
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic
Used module:         \signed_lte
Used module:         \gamma_mem
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm
Used module:         $paramod\v_to_t\D_WIDTH=s32'00000000000000000000000000010000
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage
Used module:             $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mul

8.15. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mult
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic
Used module:         \signed_lte
Used module:         \gamma_mem
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm
Used module:         $paramod\v_to_t\D_WIDTH=s32'00000000000000000000000000010000
Used module:     $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul
Used module:         $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage
Used module:             $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\mul
Removing unused module `$paramod$8f1c013275f14e385467dfcff6b49aec50919e18\matmul_stage'.
Removing unused module `$paramod$8f1c013275f14e385467dfcff6b49aec50919e18\mul'.
Removing unused module `\svm'.
Removing unused module `\v_to_t'.
Removing unused module `\pid'.
Removing unused module `\mult'.
Removing unused module `\matmul'.
Removing unused module `\matmul_stage'.
Removing unused module `\mul'.
Removing unused module `\cordic'.
Removed 10 unused modules.
Renaming module top to top.

9. Executing PROC pass (convert processes to netlists).

9.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$top.sv:80$175 in module top.
Marked 2 switch rules as full_case in process $proc$../../matmul/matmul.sv:0$327 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.
Marked 1 switch rules as full_case in process $proc$../../matmul/matmul.sv:50$325 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.
Marked 6 switch rules as full_case in process $proc$../../matmul/matmul.sv:0$312 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.
Marked 1 switch rules as full_case in process $proc$../../matmul/matmul.sv:211$310 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.
Marked 2 switch rules as full_case in process $proc$../../svm/svm_v2/svm.sv:68$282 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.
Marked 3 switch rules as full_case in process $proc$../../cordic/cordic.sv:46$198 in module $paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic.
Marked 3 switch rules as full_case in process $proc$../../pid/pid_v2/pid.sv:54$188 in module $paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid.
Removed a total of 0 dead cases.

9.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 17 redundant assignments.
Promoted 32 assignments to connections.

9.4. Executing PROC_INIT pass (extract init attributes).

9.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rstb in `\top.$proc$top.sv:80$175'.
Found async reset \rstb in `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
Found async reset \rstb in `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
Found async reset \rstb in `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
Found async reset \rstb in `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic.$proc$../../cordic/cordic.sv:46$198'.

9.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~27 debug messages>

9.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$top.sv:80$175'.
     1/20: $0\start_svm[0:0]
     2/20: $0\start_PID[0:0]
     3/20: $0\start_matmul[0:0]
     4/20: $0\start_cordic[0:0]
     5/20: $0\pid_q_done[0:0]
     6/20: $0\pid_d_done[0:0]
     7/20: $0\clarke_done[0:0]
     8/20: $0\cordic_done[0:0]
     9/20: $0\c_out_calc[15:0]
    10/20: $0\op_in_matmul[1:0]
    11/20: $0\b_in_matmul[15:0]
    12/20: $0\a_in_matmul[15:0]
    13/20: $0\periodTop_r[15:0]
    14/20: $0\currT_r[15:0]
    15/20: $0\currC_r[15:0]
    16/20: $0\currB_r[15:0]
    17/20: $0\currA_r[15:0]
    18/20: $0\angle_r[15:0]
    19/20: $0\state[4:0]
    20/20: $0\ready[0:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
     1/23: $2\next_state[2:0]
     2/23: $2\f_c[15:0]
     3/23: $2\e_c[15:0]
     4/23: $2\d_c[15:0]
     5/23: $2\c_c[15:0]
     6/23: $2\b_c[15:0]
     7/23: $2\a_c[15:0]
     8/23: $1\f_c[15:0]
     9/23: $1\e_c[15:0]
    10/23: $1\d_c[15:0]
    11/23: $1\c_c[15:0]
    12/23: $1\b_c[15:0]
    13/23: $1\a_c[15:0]
    14/23: $1\next_state[2:0]
    15/23: $1\out2_c[15:0]
    16/23: $1\out1_c[15:0]
    17/23: $1\mult2_c[15:0]
    18/23: $1\mult1_c[15:0]
    19/23: $1\b_pass[15:0]
    20/23: $1\a_pass[15:0]
    21/23: $1\done[0:0]
    22/23: $1\beta[15:0]
    23/23: $1\alpha[15:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
     1/11: $0\out2[15:0]
     2/11: $0\out1[15:0]
     3/11: $0\mult2[15:0]
     4/11: $0\mult1[15:0]
     5/11: $0\state[2:0]
     6/11: $0\f[15:0]
     7/11: $0\e[15:0]
     8/11: $0\d[15:0]
     9/11: $0\c[15:0]
    10/11: $0\b[15:0]
    11/11: $0\a[15:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
     1/36: $3\next_state[1:0]
     2/36: $2\done[0:0]
     3/36: $2\b_out[15:0]
     4/36: $2\a_out[15:0]
     5/36: $3\d_pass[15:0]
     6/36: $4\c_pass[15:0]
     7/36: $3\c_pass[15:0]
     8/36: $3\b_pass[15:0]
     9/36: $2\c_pass[15:0]
    10/36: $2\b_pass[15:0]
    11/36: $2\f_pass[15:0]
    12/36: $2\e_pass[15:0]
    13/36: $2\d_pass[15:0]
    14/36: $2\a_pass[15:0]
    15/36: $2\next_state[1:0]
    16/36: $2\op_c[1:0]
    17/36: $2\cos_c[15:0]
    18/36: $2\sin_c[15:0]
    19/36: $2\b_c[15:0]
    20/36: $2\a_c[15:0]
    21/36: $1\op_c[1:0]
    22/36: $1\cos_c[15:0]
    23/36: $1\sin_c[15:0]
    24/36: $1\b_c[15:0]
    25/36: $1\a_c[15:0]
    26/36: $1\next_state[1:0]
    27/36: $1\start_pass[0:0]
    28/36: $1\f_pass[15:0]
    29/36: $1\e_pass[15:0]
    30/36: $1\d_pass[15:0]
    31/36: $1\c_pass[15:0]
    32/36: $1\b_out[15:0]
    33/36: $1\a_out[15:0]
    34/36: $1\b_pass[15:0]
    35/36: $1\a_pass[15:0]
    36/36: $1\done[0:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
     1/6: $0\state[1:0]
     2/6: $0\op[1:0]
     3/6: $0\cos[15:0]
     4/6: $0\sin[15:0]
     5/6: $0\b[15:0]
     6/6: $0\a[15:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
     1/15: $0\tC[15:0]
     2/15: $0\tB[15:0]
     3/15: $0\tA[15:0]
     4/15: $0\vC_store[15:0]
     5/15: $0\vB_store[15:0]
     6/15: $0\vA_store[15:0]
     7/15: $0\calc_ready[0:0]
     8/15: $0\rising[0:0]
     9/15: $0\delta[15:0]
    10/15: $0\counter[15:0]
    11/15: $0\pwmC[0:0]
    12/15: $0\pwmB[0:0]
    13/15: $0\pwmA[0:0]
    14/15: $0\state[2:0]
    15/15: $0\ready[0:0]
Creating decoders for process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\cordic.$proc$../../cordic/cordic.sv:46$198'.
     1/12: $0\theta_store[17:0] [17:16]
     2/12: $0\theta_store[17:0] [15:0]
     3/12: $0\vec[0][17:0]
     4/12: $0\theta_iter[17:0]
     5/12: $0\domain[1:0]
     6/12: $0\vec[1][17:0]
     7/12: $0\state[1:0]
     8/12: $0\cos[15:0]
     9/12: $0\sin[15:0]
    10/12: $0\out_valid[0:0]
    11/12: $0\ready[0:0]
    12/12: $0\iter[4:0]
Creating decoders for process `$paramod$2ddfa54e1cc6cac576b3a03781ffbf5cad7f6a48\pid.$proc$../../pid/pid_v2/pid.sv:54$188'.
     1/13: $0\prev_int[15:0]
     2/13: $0\curr_int[15:0]
     3/13: $0\prev_error[15:0]
     4/13: $0\curr_error[15:0]
     5/13: $0\mult_b[15:0]
     6/13: $0\mult_a[15:0]
     7/13: $0\kd_2[15:0]
     8/13: $0\kd_1[15:0]
     9/13: $0\ki[15:0]
    10/13: $0\kp[15:0]
    11/13: $0\state[3:0]
    12/13: $0\out_valid[0:0]
    13/13: $0\out[15:0]

9.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\alpha' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\beta' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\done' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\next_state' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\a_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\b_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\a_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\b_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\c_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\d_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\e_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\f_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\mult1_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\mult2_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\out1_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\out2_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:0$327'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\done' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\next_state' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\a_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\b_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\a_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\b_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\a_out' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\b_out' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\c_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\d_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\e_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\f_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\start_pass' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\sin_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\cos_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.
No latch inferred for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\op_c' from process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:0$312'.

9.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\top.\ready' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1367' with positive edge clock and negative level reset.
Creating register for signal `\top.\state' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1368' with positive edge clock and negative level reset.
Creating register for signal `\top.\angle_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1369' with positive edge clock and negative level reset.
Creating register for signal `\top.\currA_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1370' with positive edge clock and negative level reset.
Creating register for signal `\top.\currB_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1371' with positive edge clock and negative level reset.
Creating register for signal `\top.\currC_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1372' with positive edge clock and negative level reset.
Creating register for signal `\top.\currT_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1373' with positive edge clock and negative level reset.
Creating register for signal `\top.\periodTop_r' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1374' with positive edge clock and negative level reset.
Creating register for signal `\top.\a_in_matmul' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1375' with positive edge clock and negative level reset.
Creating register for signal `\top.\b_in_matmul' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1376' with positive edge clock and negative level reset.
Creating register for signal `\top.\op_in_matmul' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1377' with positive edge clock and negative level reset.
Creating register for signal `\top.\c_out_calc' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1378' with positive edge clock and negative level reset.
Creating register for signal `\top.\cordic_done' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1379' with positive edge clock and negative level reset.
Creating register for signal `\top.\clarke_done' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1380' with positive edge clock and negative level reset.
Creating register for signal `\top.\pid_d_done' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1381' with positive edge clock and negative level reset.
Creating register for signal `\top.\pid_q_done' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1382' with positive edge clock and negative level reset.
Creating register for signal `\top.\start_cordic' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1383' with positive edge clock and negative level reset.
Creating register for signal `\top.\start_matmul' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1384' with positive edge clock and negative level reset.
Creating register for signal `\top.\start_PID' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1385' with positive edge clock and negative level reset.
Creating register for signal `\top.\start_svm' using process `\top.$proc$top.sv:80$175'.
  created $adff cell `$procdff$1386' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\state' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1387' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\a' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1388' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\b' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1389' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\c' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1390' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\d' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1391' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\e' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1392' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\f' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1393' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\mult1' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1394' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\mult2' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1395' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\out1' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1396' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.\out2' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul_stage.$proc$../../matmul/matmul.sv:50$325'.
  created $adff cell `$procdff$1397' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\sin' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1398' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\cos' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1399' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\state' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1400' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\a' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1401' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\b' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1402' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.\op' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\matmul.$proc$../../matmul/matmul.sv:211$310'.
  created $adff cell `$procdff$1403' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\ready' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1404' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\state' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1405' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\pwmA' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1406' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\pwmB' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1407' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\pwmC' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1408' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\counter' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1409' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\delta' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1410' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\rising' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1411' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\calc_ready' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1412' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\vA_store' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1413' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\vB_store' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1414' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\vC_store' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.
  created $adff cell `$procdff$1415' with positive edge clock and negative level reset.
Creating register for signal `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.\tA' using process `$paramod$4377ecb1b0ff5f478a904ed0b78c999d6d558834\svm.$proc$../../svm/svm_v2/svm.sv:68$282'.ERROR: Multiple edge sensitive events found for this signal!
